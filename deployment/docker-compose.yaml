version: "3.8"
services:
  traefik:
    image: traefik:v2.10.4
    environment:
      TZ: Asia/Bangkok
    ports:
      - 3000:3000
      - 8080:8080
      - 9000:9000
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.traefik.address=:9000"    
      - "--entrypoints.adminer.address=:8080"
      - "--entrypoints.soil.address=:3000"      
      - "--accesslog=true"
    volumes:            
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/log:/log:rw
    networks:
      - soil-network        
  soil:
    image: soil-collector:latest
    environment:
      TZ: Asia/Bangkok
      RAILS_ENV: production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.soil.entrypoints=soil"
      - "traefik.http.routers.soil.rule=PathPrefix(`/`)"
    volumes:            
      - ./soil/database.yml:/app/soil-collector/config/database.yml:ro
      - ./soil/log:/app/soil-collector/log:rw      
    networks:
      - soil-network      
  postgres:
    image: postgres:12.16  
    environment:
      TZ: Asia/Bangkok    
      POSTGRES_DB: soil
      POSTGRES_USER: soil
      POSTGRES_PASSWORD: P@ssw0rd
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:            
        - ./postgres/data:/var/lib/postgresql/data:rw
    networks:
      - soil-network       
  adminer:
    image: adminer:4.8.1-standalone
    environment:
      TZ: Asia/Bangkok
      ADMINER_DEFAULT_SERVER: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.entrypoints=adminer"
      - "traefik.http.routers.adminer.rule=PathPrefix(`/`)"
    networks:
      - soil-network    
networks:
  soil-network:
    name: soil-network      